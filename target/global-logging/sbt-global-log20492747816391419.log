[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 17.0.6)
[debug]       Load.loadUnit: plugins took 443.786736ms
[debug]       Load.loadUnit: defsScala took 0.532933ms
[debug] [Loading] Scanning directory /home/dione/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/dione/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 119.962333 ms
[debug]           Load.resolveProject(global-plugins) took 149.90212ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/dione/.sbt/1.0/plugins, plugins: List(<none>))) took 507.908232ms
[debug] [Loading] Done in /home/dione/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 629.860157ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.487793ms
[debug]     Load.loadUnit(file:/home/dione/.sbt/1.0/plugins/, ...) took 1190.510518ms
[debug]   Load.apply: load took 3033.046884ms
[debug]   Load.apply: resolveProjects took 16.489778ms
[debug]   Load.apply: finalTransforms took 293.352626ms
[debug]   Load.apply: config.delegates took 56.094912ms
[debug]   Load.apply: Def.make(settings)... took 2048.877925ms
[debug]   Load.apply: structureIndex took 511.167472ms
[debug]   Load.apply: mkStreams took 21.168739ms
[info] loading global plugins from /home/dione/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 46004.884835ms
[debug]           Load.loadUnit: plugins took 362.75247ms
[debug]           Load.loadUnit: defsScala took 0.00753ms
[debug] [Loading] Scanning directory /home/dione/Documents/Projet/ProjetDaouda/TestPerformance/gatling-sbt-plugin-demo/project
[debug]             Load.loadUnit: mkEval took 21.943892ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/dione/Documents/Projet/ProjetDaouda/TestPerformance/gatling-sbt-plugin-demo/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.490551 ms
[info] loading settings for project gatling-sbt-plugin-demo-build from plugins.sbt ...
[debug]               Load.resolveProject(gatling-sbt-plugin-demo-build) took 15.671958ms
[debug]             Load.loadTransitive: finalizeProject(Project(id gatling-sbt-plugin-demo-build, base: /home/dione/Documents/Projet/ProjetDaouda/TestPerformance/gatling-sbt-plugin-demo/project, plugins: List(<none>))) took 32.883281ms
[debug] [Loading] Done in /home/dione/Documents/Projet/ProjetDaouda/TestPerformance/gatling-sbt-plugin-demo/project, returning: (gatling-sbt-plugin-demo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6352.512029ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.903693ms
[debug]         Load.loadUnit(file:/home/dione/Documents/Projet/ProjetDaouda/TestPerformance/gatling-sbt-plugin-demo/project/, ...) took 6728.03252ms
[debug]       Load.apply: load took 6733.594639ms
[debug]       Load.apply: resolveProjects took 0.258364ms
[debug]       Load.apply: finalTransforms took 29.586969ms
[debug]       Load.apply: config.delegates took 0.730383ms
[debug]       Load.apply: Def.make(settings)... took 328.449405ms
[debug]       Load.apply: structureIndex took 177.631815ms
[debug]       Load.apply: mkStreams took 0.003188ms
[info] loading project definition from /home/dione/Documents/Projet/ProjetDaouda/TestPerformance/gatling-sbt-plugin-demo/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
